// Code generated by protoc-gen-goconsgen. DO NOT EDIT.
// source: proto/gosearch/contracts/models.proto

package contracts

import (
	structpb "google.golang.org/protobuf/types/known/structpb"
)

func NewStringArray(
	values []string,
) *StringArray {
	return &StringArray{
		Values: values,
	}
}

func NewEmptyResponse() *EmptyResponse {
	return &EmptyResponse{}
}

func NewIndexedDocument(
	documentId uint64,
	indexedTerms []string,
) *IndexedDocument {
	return &IndexedDocument{
		DocumentId:   documentId,
		IndexedTerms: indexedTerms,
	}
}

func NewCreateIndexedDocumentCommand(
	documents []map[string]interface{},
) (*CreateIndexedDocumentCommand, error) {
	resDocuments := ([]*structpb.Struct)(nil)
	if documents != nil {
		resDocuments = make([]*structpb.Struct, 0, len(documents))
		for idx := range documents {
			temp, err := structpb.NewStruct(documents[idx])
			if err != nil {
				return nil, err
			}
			resDocuments = append(resDocuments, temp)
		}
	} else {
		resDocuments = []*structpb.Struct{}
	}
	return &CreateIndexedDocumentCommand{
		Documents: resDocuments,
	}, nil
}

func NewSearchQuery(
	query string,
) *SearchQuery {
	return &SearchQuery{
		Query: query,
	}
}

func NewDocumentCreatedResponse(
	documents []*IndexedDocument,
) *DocumentCreatedResponse {
	return &DocumentCreatedResponse{
		Documents: documents,
	}
}

func NewSearchResponse(
	documents []map[string]interface{},
) (*SearchResponse, error) {
	resDocuments := ([]*structpb.Struct)(nil)
	if documents != nil {
		resDocuments = make([]*structpb.Struct, 0, len(documents))
		for idx := range documents {
			temp, err := structpb.NewStruct(documents[idx])
			if err != nil {
				return nil, err
			}
			resDocuments = append(resDocuments, temp)
		}
	} else {
		resDocuments = []*structpb.Struct{}
	}
	return &SearchResponse{
		Documents: resDocuments,
	}, nil
}
